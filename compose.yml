version: '2.38.2'
services:
  nginx:
    image: nginx:stable-alpine
    depends_on:
      - front
    ports:
      - "80:80"
    volumes:
      - ./:/var/www/symfony
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    volumes_from:
      - front
    networks:
      - symfony

  front:
    build:
      context: ./docker/php
      # Get GID and UID from terminal or default value (- means default)
      # To test if set up : echo $UID / $GID
      # If not the case: run `export UID=$(id -u) && export GID=$(id -g)`
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    # Xdebug
    environment:
      XDEBUG_MODE: debug
      XDEBUG_CONFIG: ${XDEBUG_CONFIG}
      PHP_IDE_CONFIG: ${PHP_IDE_CONFIG:-"serverName=localhost"}
    volumes:
      - ./:/var/www/symfony
    networks:
      - symfony

  # install maker bundle
  # then specify database in .env
  # then run php bin/console make:docker:database
  # it will automatically generate that part
  database:
    image: 'mysql:latest'
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      # To allow the host machine to access the ports below, modify the lines below.
      # For example, to allow the host to connect to port 3306 on the container, you would change
      # "3306" to "3306:3306". Where the first port is exposed to the host and the second is the container port.
      # See https://docs.docker.com/compose/compose-file/compose-file-v3/#ports for more information.
      - '3306:3306'
    networks:
      - symfony

#  xdebug:
#    volumes:
#      - ./docker/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
#    extra_hosts:
#      - host.docker.internal:host-gateway

networks:
  symfony: